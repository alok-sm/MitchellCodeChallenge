{
  "name": "Mitchell Coding Challenge",
  "tagline": "",
  "body": "### Mitchell Coding challenge\r\n\r\nThis is the repository for the code written for the Mitchell coding challenge. \r\nThe [Challenge Document](http://alokmysore.com/MitchellCodeChallenge/Challenge.pdf) required us to build a CRUD API for a vehicle class with automated testing and in memory storage of objects.\r\n\r\n## Architecture\r\n\r\nThe solution was architected with three ideas in mind:\r\n\r\n- Separation of CRUD interface and the \"Vehicle\" type - This is because most production applications use the CRUD interface several times and generalizing the CRUD aspect of the API would be useful if we were to write an endpoint for another class.\r\n\r\n- Separation of data storage and application - The challenge asks us to implement an in memory storage but in production application, we would use some sort of a database to store data. Hence, separating the interface and the implementation for the data storage is important\r\n\r\n- Automated Unit Testing and API endpoint testing\r\n\r\nThe API is hosted on [http://mitchellchallenge.azurewebsites.net](http://mitchellchallenge.azurewebsites.net). ",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}